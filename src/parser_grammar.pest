integer = @{ "-" ? ~ ASCII_DIGIT+ }

float = @{ "-" ? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* }

string = @{ "\"" ~ ( "\"\"" | (!"\"" ~ ANY) )* ~ "\"" }

identifier = @{(ASCII_ALPHA | ".")+}

ops = {
    "&&" | "-"  | "%" | "+"  | "*"  | "<"  | "==" | "^" | "||" | ">" | "/"
}

terms = _{ term+ }

priority = {"(" ~ expression ~ ")"}

func_call = {identifier ~ "(" ~ expression ~ ")"}

term = _{ float | integer | string | func_call | priority | identifier }

operation = { ops ~ expression }



variableIdentifier = { ASCII_ALPHA ~ ASCII_ALPHANUMERIC* }
variableDeclaration = {"let" ~ variableIdentifier ~ "=" ~ expression}



expression_unit = _{
    variableDeclaration | operation | terms
}

expression = {expression_unit+}


line = _{expression ~ ";"}

code = {statement+}

statement = _{ if_statement | line }

if_statement = { "if" ~ "(" ~ condition ~ ")" ~ block ~ else_block? }

// Condition is anything inside parentheses. Semicolons are allowed inside.
condition = { (!")" ~ expression)+ }

// Block is a sequence of statements within curly braces.
block = _{ "{" ~ (!"}" ~ code)* ~ "}" }

else_block = { "else" ~ block }


WHITESPACE = _{ " " | "\t" | "\n" }