use std::str::FromStr;
use crate::{Expr, Opcode};


grammar;

pub Term: Box<Expr> = {
    <t: Num> => Box::new(Expr::Num(t)), // (4)
    <b: Bool> => Box::new(Expr::Bool(b)),
    <s: String> => Box::new(Expr::String(s)),
    "(" <o2: Term> ")" => Box::new(Expr::Priority(o2)),
};

Num: f64 = {
    <n: r"[+-]?([0-9]*[.])?[0-9]+"> => f64::from_str(n).unwrap()
};

Bool: bool = {
    <b: r"true|false"> => bool::from_str(b).unwrap()
};

String: String = {
    <s: r#"\"(?:\"\"|[^\"])*\""#> => String::from(s.trim_matches('"'))
}